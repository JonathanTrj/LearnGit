1:设置文字断行/隐藏显示方式
.text {
	max-width: 100px;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

2:bootstrap中设置table固定列宽
.tab {
	layout: fixed;
}

3:html5新增属性
结构性元素
    header、footer、aside、nav、article、section
语义性元素
    mark：突出显示
    progress：进度条
    time：显示时间
    details：相当于bootstrap的collaspse
    datalist：下拉列表
    ruby：注释
    menu、command目前浏览器不支持
废除
    只支持iframe框架
表单新增
	输入类型<input type="" />
		email、url、number、range、Date Pickers、search、tel、color
	input属性
		autocomplete（on、off）、autofocus、form、重写属性、heitht与width属性、list、min与max与step、multiple、pattern、placeholder、required
		重写属性：formaction、formenctype、formmethod、formnovalidate、formtarget
		height与width：只针对type=image
绘图：
	canvas：canvas实际上只是一个容器，通过js在其上进行图形绘制
	获取canvas对象、调用getContext('2d')方法、开始绘制

4：CSS3新增
属性选择器：
	Element[att^="val"]，属性att的值以val开头的元素Element
	Element[att$="val"]，属性att的值以val结尾的元素Element
	Element[att*="val"]，属性att的值包含val的元素Element
结构伪累选择器：
	:root——文档根元素
	E:nth-child(n)
	E:nth-last-child(n)
	E:nth-of-type(n)
	E:nth-last-of-type(n)
	E:last-child
	E:first-of-type
	E:last-of-type
	E:only-child
	E:only-of-type
	E:empty——不报汉子元素的E
UI伪累选择器
	E:enabled E:disabled
	E:checked——暂不支持
	E:read-write E:read-only
	E:selection
	E:out-of-range E:in-range
	E:optional
	E:required
	E:valid E:invalid
其他选择器
	E~F：匹配的F元素，且位于匹配元素E后面
	E:not(s)：二次筛选
	E:target
边框设置
	border-radius：添加圆角边框
	border-image：边框北京
背景设置
	background-origin:"border-box|padding-box|content-box" 起始区域
	background-clip:"border-box|padding-box|content-box" 向外裁剪区域
	background-size
动画
	transform (css attribute) //定义2d变换
	transitions //定义变换动画
	animations //定义复杂动画规则
数据存储
	localsortage
	sessionstorage
	web sql（safari、chrome、opera）

5: canvas
	1: <canvas id="..." width="..." height="...">replace innerHTML</canvas>
	2: getElementById("...");
	3: getContext("2d");
	4: paint
		1、直线
			context.beginPath();
			context.moveTo(0,0);
			context.lineTo(100,100);
			context.lineWidth = 20;
			context.strokeStyle = "#ff0000";
			context.lineCap = "round";
			context.stroke();
		2、弧线和曲线
			context.beginPath();
			context.moveTo(0,0);
			context.lineTo(100,100);
			context.arcTo(弧度起始点，终点，半径); //一共五个参数
			context.lineTo(...);
			context.stroke();
		3、贝塞尔曲线
		4、矩形rect()，圆形arc()，
		5、样式
			线条宽度lineWidth, 线条颜色strokeStyle, 端点样式lineCap, 交点样式lineJoin, 颜色填充fillStyle, fill()
			阴影shadowColor,shadowBlur,shadowOffsetX,shadowOffsetY，透明度globalAlpha
			线性渐变createLinearGradient(...).addColor(...)/addColorStop()
			径向渐变createRadialGradient(...).addColor(...)/addColorStop()
			图案填充createPattern(image, type)
	5：总结
		每次都要beginPath，结束时stroke
	6、画图像
		context.drawImage(imageObj, x, y);
		context.drawImage(imageObj, x, y, width, height);
		切割：context.drawImage(imageObj, sx, sy, sw, sh, dx, dy, dw, dh);
	7、绘制文本
		context.fillText(Text, x1, y1);
		context.strokeText()
	8、图形变换
		移动坐标空间：translate()
		旋转坐标空间：rotate()
		缩放图形：scale()
	9、图形组合与裁切
		。。。

6: media
	<audio></audio>
	<video></video>
	canPlayType()
	load()
	pause()
	play()

7、动画
	1:transform：2D变换
		css属性：transform: none|<transform-functions>;
		transform-functions:
			translate(..px,...)
			scale(),scaleX(),scaleY()
			rotate(..deg)
			skew(),skewX(),skewY()
		css属性:transform-origin: x-axis y-axis z-axis; //更改中心点
	2:transitions过度动画
		所有属性：
			transition: ... //可同时指定一下四个属性
			transition-property: none|all|property //指定使用动画的css属性
			transition-duration: time //动画持续时间
			transition-timing-function: linear|ease|ease-in|ease—out|ease-in-out|cubic-bezier(n,n,n,n); //持续时间函数
			transition-delay: time //动画延迟时间
	3：animations复杂动画
		@keyframes规则
		example：在chrome/safari中需要加上 -webkit-
			@-webkit-keyframes animation-name {
				0% {
					background-position: 0,0;
				}
				14.3% {
					background-position: -180px, 0;
				}
				...
				100% {
					background-position: -1090px, 0;
				}
			}
			使用方法：定义如上css动画规则，在具体需要应用动画的标签对应属性内设置如下属性值
		animations动画属性(safari/chrome需要添加-webkit-)
			animation-name: keyframesname|none
			animation-duration: time
			animation-timing-function: same as transitions
			animation-delay: time(s/ms)
			animation-iteration-count: n|infinite
			animation-direction: normal|reverse|alternate|alternate-reverse|initial
			animation-play-state: paused|running
			animation: 所有以上属性
	4: css3渐变，放在 background 属性中
		1、线性渐变
			linear-gradient(方向或角度，起始颜色，终点颜色)
		2、径向渐变
			radial-gradient(。。。，方向和大小，包含或覆盖)
	5: 总结
		1、对于 transform 与 transition，前者定义的是最后的呈现效果，后者定义的是中间的过度效果，所以前者在结果样式中编写，后者在初始样式中编写。
		2、transform可以做出简单粗暴的动画效果，组合使用transition可以做出平滑的动画效果。
		3、同样的，transform也可以与animations组合使用，制作出平滑的动画效果